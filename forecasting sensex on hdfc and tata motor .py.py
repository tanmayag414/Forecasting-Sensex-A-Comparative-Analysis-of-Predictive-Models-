# -*- coding: utf-8 -*-
"""AI_PROJECT_TCS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-EzCOFOlh-t0u3QvBopGPo69eCufujdv
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

import warnings
warnings.filterwarnings("ignore")

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split



df = pd.read_csv('/content/HDFC.csv')

"""#EDA"""

#Dimention of dataset
df.shape

df.head()

#checking for null values and the types of data
df.info()

df.describe()

#Taking out the Needed Datas

dfr = df[['Close','Open','High','Low','Last','Prev Close']]

dfr.describe()

'''
From this Discriptive statistics we can find that when the Opening price is 1625,
High price is 1655 ,low price is 1610 , last price is 1630 and privious close is
1633 the closing price will at 1694 Rs.
'''

cor_matrix = dfr.corr()
cor_matrix

sns.heatmap(cor_matrix , cmap = 'coolwarm' , annot = False)
plt.title('Correlation of Variables ')

'''
From this correlation analysis we can find that the every independent variable
is having a high correlatiion with the dependent variable.
'''

#Checking the relationship of each variable with Dependent variable

sns.regplot(x = df[['Close']], y = df[['Open']], data= df)
plt.title("Relationship of Closing and Opening price")

sns.regplot(x = df[['Close']], y = df[['High']], data= df)
plt.title("Relationship of Closing and High price")

sns.regplot(x = df[['Close']], y = df[['Low']], data= df)
plt.title("Relationship of Closing and Low price")

sns.regplot(x = df[['Close']], y = df[['Last']], data= df)
plt.title("Relationship of Closing and Last price")

sns.regplot(x = df[['Close']], y = df[['Prev Close']], data= df)
plt.title("Relationship of Closing and Previouse close price")

'''
Each independent variable has a positve realtionship with the dependent
variable,and Previous closing price have some outliers.
'''

#Alloting the Dependent and Independent Variable

y = df[['Close']]
x = df[['Open','High','Low','Last','Prev Close']]

#Spiliting the Dependent and Independet Variables in Training and Testings values

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3 , random_state  = 0)

#dimentions of training models
x_train.shape

#dimentions of testing models
x_test.shape

#Training the model

lm = LinearRegression()
lm.fit(x_train,y_train)

print('Intercept: ' ,  lm.intercept_)
print('coefficient : ' ,  lm.coef_)

'''From this Regression anaalysis we can see that two variables are negatively
related while training the model that are Previous close price and open price.'''

'''
MODEL
Close = 0.4633596 - (0.06695249 Open) + (0.10075534 High) + (0.09384975 Low) + (0.8748669 Last) - (0.0028351 * Perv Close)
'''

#Predicting the model
yhat = lm.predict(x_test)

print(yhat)

print({'Actual': y_test, 'Predicted': yhat})

axl = sns.distplot(y_test, hist = False , color  = 'r')

sns.distplot(yhat, hist = False , color = 'b', ax = axl)

#In comparing the predicted values with actual values, the values are same. let's justify by evaluating the model.

#Model Evalutation

mean_squared_error(y_test, yhat )

rsqr = lm.score(x,y)

print('R - Squared :' , rsqr)

'''
From the above two model evaluation matrix we can find that the goodness of fit
is 0.9999 which explians that the independent variable explians the 99.99% of
the dependent variable and The average error between the predictions and actuals
in this dataset is 16.03, which is likely a good value considering the average
closing price is 1694.
'''

sns.regplot( x = y_test, y = yhat , data = df)
plt.title('Relatioship of Y_test and Yhat')
plt.ylabel('y_test')
plt.xlabel('yhat')

'''
ANALYSING WITH THE MODEL
We will take some relevant unseen values of independent variable to predict the dependent variable closing price.

Open : 3326
High : 3335
Low : 3302
Last : 3308
Prev Close : 3324
'''

values = [[3326,3335,3302,3308,3324]]

closep = lm.predict(values)

print('Closing Price :', closep)

'''
If the Open pirce is 3326, High price is 3335 , Low price is 3302 ,
Last price is 3308 and Prev Close price is 3324 the closing price will be 3308.
'''

'''
CONCLUSION
According to the descriptive statistics, the closing price will be 1694 Rs.
while the opening price is 1625, the high price is 1655, the low price is 1610,
the last price was 1630, and the previous closure was 1633. Each independent
variable and the dependent variable have high correlations according to the
correlation analysis, which suggests a favourable association. There are some
anomalies in the prior closing price, though. The model's open price and preceding
closing price have a negative association, according to the regression analysis.

Close = 0.4633596 - (0.06695249 Open) + (0.10075534 High) + (0.09384975 Low) + (0.8748669 Last) - (0.0028351 * Prev Close) is the formula for the model.

The expected values and actual values are very similar. The dependent variable
is explained by the independent variables in 99.99% of the cases when the
goodness of fit is 0.9999. Given the average closing price of 1694, the average
difference between projections and actuals is 16.03, which is fair.
Therefore this Machine learning Model is Valid.
'''

